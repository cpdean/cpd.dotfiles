# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# i can't think without vim
set-window-option -g mode-keys vi


# attempting to add better colors to tmux
# echo $TERM is xterm-256color so putting it here
set-option -ga terminal-overrides ",xterm-256color:Tc"

# per breaking change documented in https://github.com/tmux/tmux/issues/754
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# map dumb rotatekey to same select pane key
unbind-key C-o
bind-key C-o select-pane -t :.+

# remove slight delay when hitting esc
set -s escape-time 0

# since the 1.9 update, tmux no longer opens windows in the same directory as
# the currently active window. why remove a useful feature, why change the interface?
# whatever, re-implement manually:
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# battery charge indicator
# set -g status-right '#(~/.dotfiles/tmux/tmux_battery_charge_indicator.sh) #[fg=white] #(TZ=UTC date -u +%%Y-%%m-%%dT%%H:%%M:%%SZ)'
set -g status-right '#(~/.dotfiles/tmux/tmux_battery_charge_indicator.sh) #(TZ=UTC date -u +%%Y-%%m-%%dT%%H:%%M:%%SZ) '
# set -g status-utf8 on
set -g default-terminal "screen-256color"
bind Enter send-keys -t:.+1 C-c 'grunt dev' Enter

# doing things with colors
set -g status-bg white

# brew install reattach-to-user-namespace
# for some reason this allows vim inside tmux
# panes to access the clipboard for osx
#
# if branch is for osx specific setup
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l bash"'

# apparently tmux 1.9 removed the ability to make a new pane/window in cwd
# "sure let's remove something that's not only intuitive, but
# was a default behavior for years"
# manually re-implementing this feature
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# i like to scroll way back
set-option -g history-limit 20000

# trying to play with active stuff
set -g -u window-style
set -g -u window-active-style
# set -g window-style 'bg=colour237'
# set -g window-active-style 'bg=colour16'

# set -g pane-border-style 'bg=colour238 fg=white'
# set -g pane-active-border-style 'bg=colour238 fg=white'
