[user]
    name = Conrad Dean
    email = conrad.p.dean@gmail.com
    username = cpdean
[credential]
    helper = "cache --timeout=3600"
[branch]
    # autosetuprebase = always  # actually, not sure about rebasing. it will modify your history
    autosetupmerge = always  # auto track things when i make new branches
[push]
    default = current
[core]
    ignorecase = false
    autocrlf = input
    excludesfile = ~/.dotfiles/gitignore_global

[alias]
    shame = '!s() { git blame -p $@ | sed -n "s/^author-mail //p" | head -n 1; }; s'
	whatwas = "log --follow --"

    # prints a concise report about when, who, and what happened
    story= "log --format=\"%Cgreen %h%Creset %<(19,trunc)%ae %Cgreen%as%Creset %s\""

    # from https://blog.jez.io/cli-code-review/
    # list files which have changed since REVIEW_BASE
    # (REVIEW_BASE defaults to 'master' in bashrc)
    jezfiles = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")
    # better
    files = !git diff --name-only $(git merge-base HEAD \"${@:-master}\")

    # from https://blog.jez.io/cli-code-review/
    # Same as above, but with a diff stat instead of just names
    # (better for interactive use)
    jezstat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")
    # better
    stat = !git diff --stat $(git merge-base HEAD \"${@:-master}\")

    # from https://blog.jez.io/cli-code-review/
    # Open all files changed since REVIEW_BASE in Vim tabs
    # Then, run fugitive's :Gdiff in each tab, and finally
    # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
    review = !nvim -p $(git files) +\"tabdo Gvdiffsplit $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

    # from https://blog.jez.io/cli-code-review/
    # Same as the above, except specify names of files as arguments,
    # instead of opening all files:
    # git reviewone foo.js bar.js
    reviewone = !nvim -p +\"tabdo Gvdiffsplit $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"
    # alias for the alias
    ro = reviewone
    pr = !gh pr checkout $(gh pr list | fzf | awk '{print $1}')

[includeIf "gitdir:~/dev/work/"]
    path = .gitconfig-sqsp
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[pull]
	ff = only

#[url "ssh://git@github.com/"]
#    insteadOf = https://github.com/
[init]
	defaultBranch = main
