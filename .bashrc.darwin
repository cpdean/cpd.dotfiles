source ~/.bashrc.common
export HISTSIZE=1000000
# like you have to ask, ugh
export SHELL=/bin/bash
# annoying
export BASH_SILENCE_DEPRECATION_WARNING=1
# setup specific hooks for hadoops and spark
#source ~/.hadoops

# at some point brew decided to update packages without asking for your
# permission most packages are not written to be safely updated, often pulling
# in breaking changes, or failing to safely migrate datastores, etc.  as such,
# you should force homebrew to not update anything without your permission.
export HOMEBREW_NO_AUTO_UPDATE=1
# you run the risk of your packages getting old but it's better than trying to
# install one new package and having your entire development environment be
# broken for a couple days because the homebrew community can't be bothered to
# consider how to write safe migrations

# weening myself off vim
alias vim=nvim
alias vi=nvim
export EDITOR=nvim
alias iso="date -u +%FT%TZ"
#export PATH=$HOME/javatrash/apache-hive-1.1.0-bin/bin:$PATH
PS1='$? - ❯❯❯ '
# add .local for pipx
export PATH=$HOME/.local/bin:$PATH
# rabbit installs to /usr/local/sbin/ for some reason where nothing else does
export PATH=/usr/local/sbin:$PATH
# fennel, or other luarocks tools
export PATH=$PATH:$HOME/.luarocks/bin
# for deno
export DENO_INSTALL="$HOME/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

unset PROMPT_COMMAND
export plzdo="awk '{print}'"

_show_last_two_directories() {
    # this is pretty much just for the prompt command. i thought i could do it
    # via string interpolation but boy was i wrong!
    # here was the attempt.
    # PROMPT_COMMAND='echo -en "\033]0; $(echo -n ${PWD/#$HOME/~} | awk \'BEGIN { FS="/"; OFS="/" } {print $(NF-1), $NF}\')  \a"'
    # here is one way to use this function instead, so that it actually works without string escaping breaking it
    # PROMPT_COMMAND='echo -en "\033]0; $(echo -n ${PWD/#$HOME/~} | _show_last_two_directories )  \a"'
    awk 'BEGIN { FS="/"; OFS="/" } {print $(NF-1), $NF}'
}

# do things to get titlebar set
case $TERM in
  xterm*)
    #PROMPT_COMMAND='echo -ne "${USER}@${HOSTNAME}:${PWD/#$HOME/~}"'
    #PROMPT_COMMAND='echo -en "\033]0; ${PWD/#$HOME/~} \a"'
    PROMPT_COMMAND='echo -en "\033]0; $(echo -n ${PWD/#$HOME/~} | _show_last_two_directories )  \a"'
    ;;
esac

if [ -f $HOME/.bashrc.darwin.work ]; then
    export PATH=$(pyenv root)/shims:$PATH
    source $HOME/.bashrc.darwin.work
fi

# TODO: not sure if necessary if you've brew installed openjdk.
#       it bugs me with an error when opening a terminal so silence for now
# if [ -f /usr/libexec/java_home ]; then
#     export JAVA_HOME=$(/usr/libexec/java_home)
# fi

eval "$(brew shellenv)"
. "$HOME/.cargo/env"
# for openjdk java? not sure what added
export PATH="$(brew --prefix)/opt/openjdk/bin:$PATH"
